// Testing

equal(setService("33180"),"testingZip.aspx?zip=33180","We got a zip code");
equal(setService("33180 "),"testingZip.aspx?zip=33180","We got a zip code");
equal(setService("FL"),"testingState.aspx?state=FL","We got a state by abbreviation"); 
equal(setService("Florida"),"testingState.aspx?state=Florida","We got a state with the spelled name");
equal(setService("FL, 33180"),"testingZip.aspx?zip=33180","We got a zip code when passing both");
equal(setService("FL 33180"),"testingZip.aspx?zip=33180","We got a zip code when passing both");
equal(setService("Miami"),"error","We got an error form invalid data");


// Function helpers

statesNameCodes = [
    { state: "alaska", abbr: "AK" },
    { state: "alabama", abbr: "AL" },
    { state: "arkansas", abbr: "AR" },
    { state: "arizona", abbr: "AZ" },
    { state: "california", abbr: "CA" },
    { state: "colorado", abbr: "CO" },
    { state: "connecticut", abbr: "CT" },
    { state: "district of columbia", abbr: "DC" },
    { state: "delaware", abbr: "DE" },
    { state: "florida", abbr: "FL"},
    { state: "georgia", abbr: "GA"},
    { state: "hawaii", abbr: "HI"},
    { state: "iowa", abbr: "IA"},
    { state: "idaho", abbr: "ID"},
    { state: "illinois", abbr: "IL"},
    { state: "indiana", abbr: "IN"},
    { state: "kansas", abbr: "KS"},
    { state: "kentucky", abbr: "KY"},
    { state: "lousiana", abbr: "LA"},
    { state: "massachusetts", abbr: "MA"},
    { state: "maryland", abbr: "MD"},
    { state: "maine", abbr: "ME"},
    { state: "michigan", abbr: "MI"},
    { state: "minnesota", abbr: "MN"},
    { state: "missouri", abbr: "MO"},
    { state: "mississippi", abbr: "MS"},
    { state: "montana", abbr: "MT"},
    { state: "north carolina", abbr: "NC"},
    { state: "north dakote", abbr: "ND"},
    { state: "nebraska", abbr: "NE"},
    { state: "new hampshire", abbr: "NH"},
    { state: "new jersey", abbr: "NJ"},
    { state: "new mexico", abbr: "NM"},
    { state: "nevada", abbr: "NV"},
    { state: "new york", abbr: "NY"},
    { state: "ohio", abbr: "OH"},
    { state: "oklahoma", abbr: "OK"},
    { state: "oergon", abbr: "OR"},
    { state: "pennsylvania", abbr: "PA"},
    { state: "rhode island", abbr: "RI"},
    { state: "south carolina", abbr: "SC"},
    { state: "south dakota", abbr: "SD"},
    { state: "tennessee", abbr: "TN"},
    { state: "texas", abbr: "TX"},
    { state: "utah", abbr: "UT"},
    { state: "virgina", abbr: "VA"},
    { state: "vermont", abbr: "VT"},
    { state: "washington", abbr: "WA"},
    { state: "wisoncsin", abbr: "WI"},
    { state: "west virginia", abbr: "WV"},
    { state: "wyoming", abbr: "WY"}
],

stateNames = _.pluck(statesNameCodes, 'state'),
stateCodes = _.pluck(statesNameCodes, 'abbr');


function divideString (data, seperator) {

	var searchTerm = data;

	// Check for comma & split where necessary
	if (searchTerm.indexOf(seperator) !== -1) {
		searchTerm = data.split(seperator);
	} else {
		searchTerm = [data];
	}

	$.each(searchTerm, function (key, value) {
		searchTerm[key] = $.trim(value.replace(/,/g, ""));
	});

	return searchTerm;

},
